{
  "no": 6,
  "title": "Learn and Understand NodeJS",
  "subtitle": "Dive deep under the hood of NodeJS. Learn V8, Express, the MEAN stack, core Javascript concepts, and more.",
  "authors": [
    {
      "no": 8,
      "name": "Anthony Alicea"
    }
  ],
  "average": 4.6,
  "reviews": 10302,
  "enrolled": 54747,
  "price": 195,
  "category": "Development",
  "picture": "461160_8d87_6.jpg",
  "updated": 1483110000000,
  "description": "<div class=\"js-simple-collapse-inner\" data-purpose=\"collapse-description-text\">\r\n                    <div class=\"description__title\">\r\n                        \r\n                    <\/div>\r\n\r\n                    <p><strong>NOTE: This is an EARLY BIRD version of the course, meaning all content is not yet published. New content being added as course completion nears!<\/strong><\/p><p>NodeJS is a rapidy growing web server technology, and Node developers are among the highest paid in the industry. Knowing NodeJS well will get you a job or improve your current one by enabling you to build high quality, robust web applications.<\/p><p>In this course you will gain a deep understanding of Node, learn how NodeJS works under the hood, and how that knowledge helps you avoid common pitfalls and <em>drastically improve your ability to debug problems<\/em>. <\/p><p>In this course we'll look at <strong>how the C++ written V8 Javascript engine works and how NodeJS uses it to expand the abilities of Javascript<\/strong>. You'll learn how to structure your code for reuse and to be easier to understand, manage, and expand using <strong>modules and understand how modules really work<\/strong>.<\/p><p>You'll learn <strong>how asynchronous code works in Node and the Node event loop<\/strong>, as well as how to use the <strong>event emitter, streams, buffers, pipes, and work with files<\/strong>. We'll see how that leads to <strong>building a web server in Node<\/strong>. <\/p><p>We'll dive into<strong> web sites, web apps and APIs with Express<\/strong> and learn how Express can save us time as Node developers.<\/p><p>You'll also gain an understanding of <strong>npm, connecting to databases, and the MEAN stack<\/strong>!<\/p><p>During it all you'll gain a deep understanding of the Javascript concepts and other computer science concepts that power Node.<\/p><p>NodeJS doesn't have to be hard to learn. The biggest mistake most coding tutorials make is expecting someone to learn simply by imitating others' code. Real world situations are never exactly like the tutorial.<\/p><p>I believe the best way to learn is to understand how a tool works and what it does for you, look at examples, and then try it yourself. That's how this course is built, with the goal to help you both learn and understand NodeJS.<\/p><p><em>Note: In this course you'll also get <strong>downloadable source code<\/strong>. You will often be provided with 'starter' code, giving you the base for you to start writing your code, and 'finished' code to compare your code to.<\/em><\/p>\r\n\r\n                    \r\n                        <div class=\"audience\" data-purpose=\"course-audience\">\r\n                            <div class=\"audience__title\">\r\n                                Who is the target audience?\r\n                            <\/div>\r\n                            <ul class=\"audience__list\">\r\n                                \r\n                                    <li>Those looking to build a career as a NodeJS developer<\/li>\r\n                                \r\n                                    <li>Those desiring to become MEAN stack developers<\/li>\r\n                                \r\n                                    <li>Those who don't have server technology experience but wish to gain this skill<\/li>\r\n                                \r\n                                    <li>Those coming from other server technologies (like PHP, ASP.NET, or Ruby on Rails) and want to learn Node<\/li>\r\n                                \r\n                                    <li>Those who want to only have to write both client and server code in one language: Javascript<\/li>\r\n                                \r\n                                    <li>Those who want to grasp Express<\/li>\r\n                                \r\n                            <\/ul>\r\n                        <\/div>\r\n                    \r\n                <\/div>"
}
